{"version":3,"sources":["../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/icons/esm/MoreVert.js","components/commentView/CommentItem.js","components/commentView/CommentView.js","components/videoView/VideoView.js"],"names":["useEnhancedEffect","window","React","ListItem","props","ref","_props$alignItems","alignItems","_props$autoFocus","autoFocus","_props$button","button","childrenProp","children","classes","className","componentProp","component","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_objectWithoutProperties","_props$dense","dense","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","other","context","ListContext","childContext","listItemRef","current","focus","toArray","hasSecondaryAction","length","isMuiElement","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","_extends","clsx","root","gutters","alignItemsFlexStart","secondaryAction","Component","focusVisible","ButtonBase","Provider","value","container","pop","withStyles","theme","display","justifyContent","position","textDecoration","width","boxSizing","textAlign","paddingTop","paddingBottom","backgroundColor","palette","action","opacity","borderBottom","concat","backgroundClip","paddingLeft","paddingRight","transition","transitions","create","duration","shortest","hover","name","MenuItem","tabIndex","_props$component","ListItemClasses","_props$role","role","tabIndexProp","undefined","typography","body1","_defineProperty","minHeight","overflow","whiteSpace","breakpoints","up","body2","createSvgIcon","d","styled","comment","setCurrentTypedComment","useState","open","setOpen","user","useAuthState","deleteComment","useCommentActions","videoId","useParams","anchorRef","useRef","flexy","Item","modifiers","src","photo","alt","spacing","_id","onClick","prev","as","MoreVert","id","renderActionBtn","list","useCommentState","comments","statusComments","errorComments","useForm","register","handleSubmit","setValue","reset","getVideoComments","createComment","updateComment","currentTypedComment","values","a","useEffect","severity","text","onSubmit","Input","type","placeholder","required","map","history","useVideoState","video","statusVideo","errorVideo","useVideoActions","getVideoById","videoLikeHandle","videoSubscribeHandle","currentUserLike","useLikeState","useLikeActions","getCurrentLike","createLike","deleteLike","useSubscribeActions","getCurrentSubscribe","createSubscribe","deleteSubscribe","currentUserSub","useSubscribeState","descriptionShow","setDescriptionShow","isSubscribed","isLiked","videoSrc","channel","title","Date","createdAt","toLocaleDateString","year","month","day","views","pd","onLikeHandle","push","ThumbUp","likes","onSubscribeHandle","mb","Link","flexwidth","mr","to","image","subscribes","description","media","tabport"],"mappings":"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","file":"static/js/10.9ebfe1d5.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import React, { useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Button, Paragraph, ImageContainer, Image, ListGroup, Icon } from '../../design/components';\nimport { Menu } from '../../design/elements';\nimport { useAuthState } from '../../stores/auth/authStateContext';\nimport { useCommentActions } from '../../stores/comment/commentActionContext';\nimport { MenuItem } from '@material-ui/core';\nimport { MoreVert } from '@material-ui/icons';\nconst CommentItem = ({ comment, setCurrentTypedComment, className }) => {\n   const [open, setOpen] = useState(false);\n   const { user } = useAuthState();\n   const { deleteComment } = useCommentActions();\n   const { videoId } = useParams();\n   const anchorRef = useRef(null);\n\n   function onDeleteClick(id) {\n      return function () {\n         deleteComment(videoId, id);\n      };\n   }\n\n   function renderActionBtn(comment) {\n      return (\n         <ListGroup.Item>\n            {/*<Button modifiers='seablue' onClick={() => setCurrentTypedComment(comment)}>\n                           Edit\n                        </Button>\n                        <Button modifiers='primary' onClick={onDeleteClick(comment._id)}>\n                           Delete\n                        </Button>*/}\n\n            <Button\n               ref={anchorRef}\n               onClick={() => setOpen((prev) => !prev)}\n               modifiers='transparent'\n            >\n               <Icon as={MoreVert} />\n            </Button>\n            <Menu open={open} setOpen={setOpen} anchorRef={anchorRef}>\n               <MenuItem onClick={() => setCurrentTypedComment(comment)}>Edit</MenuItem>\n               <MenuItem onClick={onDeleteClick(comment._id)}>Delete</MenuItem>\n            </Menu>\n         </ListGroup.Item>\n      );\n   }\n\n   return (\n      <ListGroup flexy='center' className={className}>\n         <ListGroup.Item width='5'>\n            <ImageContainer>\n               <Image\n                  modifiers='round'\n                  src={`http://127.0.0.1:8000/${comment.user.photo}`}\n                  alt='User Image'\n               />\n            </ImageContainer>\n         </ListGroup.Item>\n         <ListGroup.Item width='85' spacing='2.5'>\n            <Paragraph modifiers={['small', 'bold']}>{comment.user.name}</Paragraph>\n            <Paragraph modifiers='small'>{comment.comment}</Paragraph>\n         </ListGroup.Item>\n         {user && user._id === comment.user._id ? renderActionBtn(comment) : null}\n      </ListGroup>\n   );\n};\n\nexport default styled(CommentItem)`\n   &:not(:last-child) {\n      margin-bottom: 3rem;\n   }\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Form, Button, FlexWrapper } from '../../design/components';\nimport { useAuthState } from '../../stores/auth/authStateContext';\nimport { useCommentState } from '../../stores/comment/commentStateContext';\nimport { useCommentActions } from '../../stores/comment/commentActionContext';\nimport { useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport CommentItem from './CommentItem';\nimport { Spinner, Message } from '../../design/elements';\n\nconst CommentView = ({ className }) => {\n   const { user } = useAuthState();\n   const { comments, statusComments, errorComments } = useCommentState();\n   const { register, handleSubmit, setValue, reset } = useForm();\n   const { getVideoComments, createComment, updateComment } = useCommentActions();\n   const [currentTypedComment, setCurrentTypedComment] = useState(null);\n   let { videoId } = useParams();\n\n   useEffect(() => {\n      getVideoComments(videoId);\n   }, [getVideoComments, videoId]);\n\n   useEffect(() => {\n      if (currentTypedComment) setValue('comment', currentTypedComment.comment);\n   }, [currentTypedComment, setValue]);\n\n   function onCancelClick() {\n      reset();\n      setCurrentTypedComment(null);\n   }\n\n   async function onCreate(values) {\n      createComment(videoId, values);\n      setCurrentTypedComment(null);\n   }\n\n   function onUpdate(values) {\n      updateComment(videoId, currentTypedComment._id, values);\n      setCurrentTypedComment(null);\n   }\n\n   function renderComments(list) {\n      return list?.map(function generateItem(comment) {\n         return (\n            <CommentItem\n               key={comment._id}\n               comment={comment}\n               setCurrentTypedComment={setCurrentTypedComment}\n            />\n         );\n      });\n   }\n\n   if (statusComments === 'idle' || statusComments === 'pending')\n      return (\n         <FlexWrapper>\n            <Spinner modifiers='dark' />\n         </FlexWrapper>\n      );\n   if (statusComments === 'rejected' && errorComments)\n      return <Message severity='error' text={errorComments} />;\n   if (statusComments === 'resolved')\n      return (\n         <div className={className}>\n            {user ? (\n               <Form\n                  className='comment__form'\n                  onSubmit={handleSubmit(!currentTypedComment ? onCreate : onUpdate)}\n               >\n                  <Form.Input\n                     modifiers='transparent'\n                     type='text'\n                     name='comment'\n                     placeholder='Add a public comment...'\n                     ref={register({\n                        required: 'Please type your comment'\n                     })}\n                  />\n                  <div className='comment__submitbox'>\n                     <Button onClick={onCancelClick}>Cancel</Button>\n                     <Button modifiers='secondary'>Comment</Button>\n                  </div>\n               </Form>\n            ) : null}\n            <div>{renderComments(comments)}</div>\n         </div>\n      );\n};\n\nexport default styled(CommentView)`\n   margin-top: 5rem;\n\n   .comment {\n      &__form {\n         margin: 3rem 0;\n      }\n\n      &__submitbox {\n         margin-top: 1rem;\n         display: flex;\n         justify-content: flex-end;\n      }\n   }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n   Col,\n   ImageContainer,\n   Link as SLink,\n   Video,\n   Title,\n   Paragraph,\n   ListGroup,\n   Button,\n   Icon,\n   Image,\n   Span\n} from '../../design/components';\nimport { media } from '../../design/utils';\nimport { useAuthState } from '../../stores/auth/authStateContext';\nimport { useVideoState } from '../../stores/video/videoStateContext';\nimport { useVideoActions } from '../../stores/video/videoActionContext';\nimport { useLikeState } from '../../stores/likes/likeStateContext';\nimport { useLikeActions } from '../../stores/likes/likeActionContext';\nimport { useSubscribeState } from '../../stores/subscriptions/subscribeStateContext';\nimport { useSubscribeActions } from '../../stores/subscriptions/subscribeActionContext';\nimport CommentView from '../commentView/CommentView';\nimport { ThumbUp } from '@material-ui/icons';\nimport { Message, Spinner } from '../../design/elements';\n\nconst VideoView = ({ history, className }) => {\n   const { user } = useAuthState();\n   const { videoId } = useParams();\n   const { video, statusVideo, errorVideo } = useVideoState();\n   const { getVideoById, videoLikeHandle, videoSubscribeHandle } = useVideoActions();\n   const { currentUserLike } = useLikeState();\n   const { getCurrentLike, createLike, deleteLike } = useLikeActions();\n   const { getCurrentSubscribe, createSubscribe, deleteSubscribe } = useSubscribeActions();\n   const { currentUserSub } = useSubscribeState();\n   const [descriptionShow, setDescriptionShow] = useState(false);\n   const isSubscribed = currentUserSub ? true : false;\n   const isLiked = currentUserLike ? true : false;\n   const videoSrc = `https://www.youtube.com/embed/${videoId}`;\n\n   useEffect(() => {\n      getVideoById(videoId);\n   }, [videoId, getVideoById]);\n\n   useEffect(() => {\n      if (user) getCurrentLike(user._id, videoId);\n   }, [user, videoId, getCurrentLike]);\n\n   useEffect(() => {\n      if (user && video) getCurrentSubscribe(user._id, video.channel._id);\n   }, [user, video, getCurrentSubscribe]);\n\n   function onLikeHandle(user, video) {\n      return async function () {\n         if (!isLiked) {\n            await createLike(user._id, video);\n            videoLikeHandle('add');\n         } else {\n            await deleteLike(video.videoId);\n            videoLikeHandle('delete');\n         }\n      };\n   }\n   function onSubscribeHandle(user, video) {\n      return async function () {\n         if (!isSubscribed) {\n            await createSubscribe(user._id, video.channel._id);\n            videoSubscribeHandle('add');\n         } else {\n            await deleteSubscribe(user._id, video.channel._id);\n            videoSubscribeHandle('delete');\n         }\n      };\n   }\n\n   if (statusVideo === 'idle' || statusVideo === 'pending') return <Spinner modifiers='dark' />;\n   if (statusVideo === 'rejected' && errorVideo)\n      return (\n         <Col width='10'>\n            <Message severity='error' text={errorVideo} />\n         </Col>\n      );\n   if (statusVideo === 'resolved')\n      return (\n         <Col width='10' className={className}>\n            <div className='video'>\n               <div className='video__videobox'>\n                  <Video src={videoSrc} title='video player' />\n               </div>\n               <ListGroup flexy='center' className='video__titlebox'>\n                  <ListGroup.Item width='70'>\n                     <Title modifiers='medium'>{video.title}</Title>\n                     <Paragraph modifiers='small'>\n                        {new Date(video.createdAt).toLocaleDateString('en-US', {\n                           year: 'numeric',\n                           month: 'long',\n                           day: 'numeric'\n                        })}{' '}\n                        • {video.views} views\n                     </Paragraph>\n                  </ListGroup.Item>\n                  <ListGroup.Item flexy='center'>\n                     <Button\n                        modifiers='transparent'\n                        pd='0'\n                        onClick={user ? onLikeHandle(user, video) : () => history.push('/login')}\n                     >\n                        <Icon as={ThumbUp} modifiers={`${isLiked ? 'secondary' : null}`} />\n                     </Button>\n                     <Span modifiers={['medium', 'regular']}>{video.likes}</Span>\n                     <Button\n                        modifiers={[`${isSubscribed ? 'disable' : 'primary'}`]}\n                        className='video__subscribebtn'\n                        onClick={\n                           user ? onSubscribeHandle(user, video) : () => history.push('/login')\n                        }\n                     >\n                        Subscribe\n                     </Button>\n                  </ListGroup.Item>\n               </ListGroup>\n               <ListGroup modifiers='vertical' className='video__info'>\n                  <ListGroup.Item flexy='center' mb='0.5rem'>\n                     <SLink as={Link} flexwidth='5' mr='1rem' to={`/channel/${video.channel._id}`}>\n                        <ImageContainer>\n                           <Image modifiers='round' src={video.channel.image} alt='Author image' />\n                        </ImageContainer>\n                     </SLink>\n                     <div>\n                        <Title as='h2' modifiers='regular'>\n                           {video.channel.title}\n                        </Title>\n                        <Span modifiers='medium'>{video.channel.subscribes} subscribers</Span>\n                     </div>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                     {descriptionShow ? (\n                        <Paragraph modifiers='small'>{video.description}</Paragraph>\n                     ) : null}\n                     <Button\n                        modifiers={['medium', 'transparent']}\n                        onClick={() => setDescriptionShow(!descriptionShow)}\n                     >\n                        {descriptionShow ? 'Show Less' : 'Show More'}\n                     </Button>\n                  </ListGroup.Item>\n               </ListGroup>\n               <CommentView />\n            </div>\n         </Col>\n      );\n};\n\nexport default styled(VideoView)`\n   .video {\n      width: 80%;\n      margin: 0 auto;\n      padding: 2rem 0rem;\n      ${media.tabport(`\n      width: 90%;\n      `)}\n\n      &__videobox {\n         box-shadow: var(--shadow-dark-shallow);\n         height: 37.5vw;\n         ${media.tabport(`\n      height: 45vw;\n      `)}\n      }\n\n      &__titlebox {\n         border-bottom: solid 0.1rem #000;\n         padding: 2rem 1rem;\n      }\n\n      &__subscribebtn {\n         flex: 0 0 15%;\n         margin-left: 2.5%;\n      }\n\n      &__info {\n         padding: 2rem 0;\n         border-bottom: solid 0.1rem #000;\n      }\n   }\n`;\n"],"sourceRoot":""}