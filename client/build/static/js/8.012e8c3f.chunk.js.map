{"version":3,"sources":["screen/account/AccountView.js","utils/user.js"],"names":["styled","className","useForm","register","errors","handleSubmit","setValue","useAuth","user","setData","mutation","useMutation","values","formData","FormData","append","name","email","photo","userRequest","patch","then","data","update","mutate","useUpdateUserData","isUpdateSuccess","isSuccess","useState","showAlert","setShowAlert","useEffect","timer","setTimeout","clearTimeout","width","text","severity","fade","desktop","tabland","tabport","my","modifiers","onSubmit","Group","mb","type","ref","required","message","pattern","value","direction","src","process","id","htmlFor"],"mappings":"uiBAuGeA,uBApFK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACiBC,cAA7CC,EAD4B,EAC5BA,SAAUC,EADkB,EAClBA,OAAQC,EADU,EACVA,aAAcC,EADJ,EACIA,SADJ,EAEjBC,cAAVC,EAF2B,oBAE3BA,KAF2B,ECfvC,WAA8B,IAAD,EACJD,cAAbE,EADiB,oBACjBA,QACLC,EAAWC,aAAY,SAACC,GAC7B,IAAMC,EAAW,IAAIC,SAIrB,OAHAD,EAASE,OAAO,OAAQH,EAAOI,MAC/BH,EAASE,OAAO,QAASH,EAAOK,OAChCJ,EAASE,OAAO,QAASH,EAAOM,MAAM,IAC/BC,IAAYC,MAAM,YAAaP,GAAUQ,MAAK,YAAyB,IAAdC,EAAa,EAArBA,KAAQA,KAE/D,OADAb,EAAQa,EAAKd,MACNc,EAAKd,WAGd,OAAO,2BAAKE,GAAZ,IAAsBa,OAAQb,EAASc,SDMUC,GAAvCF,EAH4B,EAG5BA,OAAmBG,EAHS,EAGpBC,UAHoB,EAIFC,oBAAS,GAJP,mBAI7BC,EAJ6B,KAIlBC,EAJkB,KAuBpC,OAjBAC,qBAAU,WACHvB,IACDF,EAAS,OAAQE,EAAKQ,MACtBV,EAAS,QAASE,EAAKS,UAE1B,CAACT,EAAMF,IAEVyB,qBAAU,WACP,GAAIvB,GAAQkB,EAAiB,CAC1BI,GAAa,GACb,IAAME,EAAQC,YAAW,WACtBH,GAAa,KACb,KACH,OAAO,kBAAMI,aAAaF,OAE7B,CAACxB,EAAMkB,IAGP,eAAC,IAAD,CAAKS,MAAM,KAAKlC,UAAWA,EAA3B,UACIyB,GAAmBG,EACjB,cAAC,IAAD,CAAcO,KAAK,sBAAsBC,SAAS,UAAUC,KAAMT,IACjE,KACJ,eAAC,IAAD,CAAeM,MAAO,CAAEI,QAAS,MAAOC,QAAS,MAAOC,QAAS,OAASC,GAAG,IAA7E,UACG,cAAC,IAAD,CAAOC,UAAU,MAAjB,mCACA,eAAC,IAAD,CAAMC,SAAUvC,EAAakB,GAA7B,UACG,eAAC,IAAKsB,MAAN,CAAYC,GAAG,IAAf,UACG,cAAC,IAAD,CAAOH,UAAU,QAAjB,kBACA,cAAC,IAAD,CACGI,KAAK,OACL/B,KAAK,OACLgC,IAAK7C,EAAS,CACX8C,SAAU,+BAGhB,cAAC,IAAD,UAAY7C,EAAOY,MAAQZ,EAAOY,KAAKkC,aAE1C,eAAC,IAAKL,MAAN,CAAYC,GAAG,IAAf,UACG,cAAC,IAAD,CAAOH,UAAU,QAAjB,mBACA,cAAC,IAAD,CACGI,KAAK,OACL/B,KAAK,QACLgC,IAAK7C,EAAS,CACX8C,SAAU,4BACVE,QAAS,CACNC,MAAO,2CACPF,QAAS,6BAIlB,cAAC,IAAD,UAAY9C,EAAOa,OAASb,EAAOa,MAAMiC,aAE5C,eAAC,IAAKL,MAAN,CAAYQ,UAAU,MAAtB,UACG,cAAC,IAAD,CAAgBlB,MAAO,CAAEI,QAAS,QAAlC,SACG,cAAC,IAAD,CACGI,UAAU,QACVW,IAAG,UAAKC,iDAAL,iCAGT,cAAC,IAAD,CACGR,KAAK,OACLC,IAAK7C,EACLqD,GAAG,QACHxC,KAAK,QACLf,UAAU,eAEb,cAAC,IAAD,CAAO0C,UAAU,aAAa1C,UAAU,kBAAkBwD,QAAQ,QAAlE,8BAGA,cAAC,IAAD,CAAQd,UAAW,CAAC,WAAY,SAAU1C,UAAU,kBAApD,yCAUHD,CAAf","file":"static/js/8.012e8c3f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n   Col,\r\n   FormContainer,\r\n   Title,\r\n   Form,\r\n   Label,\r\n   Button,\r\n   Paragraph,\r\n   ImageContainer,\r\n   Image,\r\n   Input\r\n} from 'design/components';\r\nimport useAuth from 'context/auth/authContext';\r\nimport { useUpdateUserData } from 'utils/user';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CoverMessage } from 'components/Message';\r\n\r\nconst AccountView = ({ className }) => {\r\n   const { register, errors, handleSubmit, setValue } = useForm();\r\n   const [{ user }] = useAuth();\r\n   const { update, isSuccess: isUpdateSuccess } = useUpdateUserData();\r\n   const [showAlert, setShowAlert] = useState(false);\r\n\r\n   useEffect(() => {\r\n      if (user) {\r\n         setValue('name', user.name);\r\n         setValue('email', user.email);\r\n      }\r\n   }, [user, setValue]);\r\n\r\n   useEffect(() => {\r\n      if (user && isUpdateSuccess) {\r\n         setShowAlert(true);\r\n         const timer = setTimeout(() => {\r\n            setShowAlert(false);\r\n         }, 1000);\r\n         return () => clearTimeout(timer);\r\n      }\r\n   }, [user, isUpdateSuccess]);\r\n\r\n   return (\r\n      <Col width='12' className={className}>\r\n         {isUpdateSuccess && showAlert ? (\r\n            <CoverMessage text='Update Successfully' severity='success' fade={showAlert} />\r\n         ) : null}\r\n         <FormContainer width={{ desktop: '50%', tabland: '70%', tabport: '90%' }} my='2'>\r\n            <Title modifiers='big'>Your Account Settings</Title>\r\n            <Form onSubmit={handleSubmit(update)}>\r\n               <Form.Group mb='1'>\r\n                  <Label modifiers='large'>Name</Label>\r\n                  <Input\r\n                     type='text'\r\n                     name='name'\r\n                     ref={register({\r\n                        required: 'You must specify an name'\r\n                     })}\r\n                  />\r\n                  <Paragraph>{errors.name && errors.name.message}</Paragraph>\r\n               </Form.Group>\r\n               <Form.Group mb='1'>\r\n                  <Label modifiers='large'>Email</Label>\r\n                  <Input\r\n                     type='text'\r\n                     name='email'\r\n                     ref={register({\r\n                        required: 'You must specify an email',\r\n                        pattern: {\r\n                           value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                           message: 'Invalid email address'\r\n                        }\r\n                     })}\r\n                  />\r\n                  <Paragraph>{errors.email && errors.email.message}</Paragraph>\r\n               </Form.Group>\r\n               <Form.Group direction='row'>\r\n                  <ImageContainer width={{ desktop: '5rem' }}>\r\n                     <Image\r\n                        modifiers='round'\r\n                        src={`${process.env.REACT_APP_BACKEND_URL}/assets/users/default.jpg`}\r\n                     />\r\n                  </ImageContainer>\r\n                  <Input\r\n                     type='file'\r\n                     ref={register}\r\n                     id='photo'\r\n                     name='photo'\r\n                     className='form__file'\r\n                  />\r\n                  <Label modifiers='bottomfill' className='form__filelabel' htmlFor='photo'>\r\n                     Choose New Photo\r\n                  </Label>\r\n                  <Button modifiers={['gradient', 'round']} className='form__submitbtn'>\r\n                     Save Settings\r\n                  </Button>\r\n               </Form.Group>\r\n            </Form>\r\n         </FormContainer>\r\n      </Col>\r\n   );\r\n};\r\n\r\nexport default styled(AccountView)`\r\n   .form {\r\n      &__file {\r\n         display: none;\r\n      }\r\n      &__filelabel {\r\n         align-self: center;\r\n         margin-left: 2rem;\r\n         padding: 1rem;\r\n         margin-right: auto;\r\n      }\r\n      &__submitbtn {\r\n         align-self: center;\r\n      }\r\n   }\r\n`;\r\n","import { useMutation } from 'react-query';\r\nimport useAuth from 'context/auth/authContext';\r\nimport { userRequest } from 'apis/backend';\r\n\r\nfunction useUpdateUserData() {\r\n\tconst [, { setData }] = useAuth();\r\n\tconst mutation = useMutation((values) => {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('name', values.name);\r\n\t\tformData.append('email', values.email);\r\n\t\tformData.append('photo', values.photo[0]);\r\n\t\treturn userRequest.patch('/updateMe', formData).then(({ data: { data } }) => {\r\n\t\t\tsetData(data.user);\r\n\t\t\treturn data.user;\r\n\t\t});\r\n\t});\r\n\treturn { ...mutation, update: mutation.mutate };\r\n}\r\n\r\nexport { useUpdateUserData };\r\n"],"sourceRoot":""}