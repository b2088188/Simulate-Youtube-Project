{"version":3,"sources":["components/accountView/AccountView.js"],"names":["styled","className","useForm","register","errors","handleSubmit","setValue","reset","useAuthState","user","statusAuth","updateUserData","useAuthActions","useEffect","name","email","width","desktop","tabland","tabport","my","modifiers","onSubmit","values","Group","mb","Input","type","ref","required","message","pattern","value","direction","src","process","id","htmlFor"],"mappings":"0gBAmGeA,uBAjFK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACwBC,cAApDC,EAD4B,EAC5BA,SAAUC,EADkB,EAClBA,OAAQC,EADU,EACVA,aAAcC,EADJ,EACIA,SAAUC,EADd,EACcA,MADd,EAEPC,cAArBC,EAF4B,EAE5BA,KAAMC,EAFsB,EAEtBA,WACNC,EAAmBC,cAAnBD,eAcR,OAZAE,qBAAU,WACHJ,IACDH,EAAS,OAAQG,EAAKK,MACtBR,EAAS,QAASG,EAAKM,UAE1B,CAACN,EAAMH,IAQP,cAAC,IAAD,CAAKU,MAAM,KAAKf,UAAWA,EAA3B,SACG,eAAC,IAAD,CAAee,MAAO,CAAEC,QAAS,MAAOC,QAAS,MAAOC,QAAS,OAASC,GAAG,IAA7E,UACG,cAAC,IAAD,CAAOC,UAAU,MAAjB,mCACgB,YAAfX,EACE,cAAC,IAAD,CAASW,UAAU,SAEnB,eAAC,IAAD,CAAMC,SAAUjB,GAZ5B,SAA0BkB,GACvBZ,EAAeY,GACfhB,OAUS,UACG,eAAC,IAAKiB,MAAN,CAAYC,GAAG,IAAf,UACG,cAAC,IAAD,CAAOJ,UAAU,QAAjB,kBACA,cAAC,IAAKK,MAAN,CACGL,UAAU,UACVM,KAAK,OACLb,KAAK,OACLc,IAAKzB,EAAS,CACX0B,SAAU,+BAGhB,cAAC,IAAD,UAAYzB,EAAOU,MAAQV,EAAOU,KAAKgB,aAE1C,eAAC,IAAKN,MAAN,CAAYC,GAAG,IAAf,UACG,cAAC,IAAD,CAAOJ,UAAU,QAAjB,mBACA,cAAC,IAAKK,MAAN,CACGL,UAAU,UACVM,KAAK,OACLb,KAAK,QACLc,IAAKzB,EAAS,CACX0B,SAAU,4BACVE,QAAS,CACNC,MAAO,2CACPF,QAAS,6BAIlB,cAAC,IAAD,UAAY1B,EAAOW,OAASX,EAAOW,MAAMe,aAE5C,eAAC,IAAKN,MAAN,CAAYS,UAAU,MAAtB,UACG,cAAC,IAAD,CAAgBjB,MAAO,CAAEC,QAAS,QAAlC,SACG,cAAC,IAAD,CACGI,UAAU,QACVa,IAAG,UAAKC,iDAAL,iCAGT,cAAC,IAAKT,MAAN,CACGC,KAAK,OACLC,IAAKzB,EACLiC,GAAG,QACHtB,KAAK,QACLb,UAAU,eAEb,cAAC,IAAD,CAAOoB,UAAU,aAAapB,UAAU,kBAAkBoC,QAAQ,QAAlE,8BAGA,cAAC,IAAD,CAAQhB,UAAW,CAAC,WAAY,SAAUpB,UAAU,kBAApD,wCAWND,CAAf","file":"static/js/4.5d46462e.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n   Col,\n   FormContainer,\n   Title,\n   Form,\n   Label,\n   Button,\n   Paragraph,\n   ImageContainer,\n   Image\n} from '../../design/components';\nimport { useAuthState } from '../../stores/auth/authStateContext';\nimport { useAuthActions } from '../../stores/auth/authActionContext';\nimport { useForm } from 'react-hook-form';\nimport { Spinner } from '../../design/elements';\n\nconst AccountView = ({ className }) => {\n   const { register, errors, handleSubmit, setValue, reset } = useForm();\n   const { user, statusAuth } = useAuthState();\n   const { updateUserData } = useAuthActions();\n\n   useEffect(() => {\n      if (user) {\n         setValue('name', user.name);\n         setValue('email', user.email);\n      }\n   }, [user, setValue]);\n\n   function onUpdateUserData(values) {\n      updateUserData(values);\n      reset();\n   }\n\n   return (\n      <Col width='12' className={className}>\n         <FormContainer width={{ desktop: '50%', tabland: '70%', tabport: '90%' }} my='2'>\n            <Title modifiers='big'>Your Account Settings</Title>\n            {statusAuth === 'pending' ? (\n               <Spinner modifiers='dark' />\n            ) : (\n               <Form onSubmit={handleSubmit(onUpdateUserData)}>\n                  <Form.Group mb='1'>\n                     <Label modifiers='large'>Name</Label>\n                     <Form.Input\n                        modifiers='outline'\n                        type='text'\n                        name='name'\n                        ref={register({\n                           required: 'You must specify an name'\n                        })}\n                     />\n                     <Paragraph>{errors.name && errors.name.message}</Paragraph>\n                  </Form.Group>\n                  <Form.Group mb='1'>\n                     <Label modifiers='large'>Email</Label>\n                     <Form.Input\n                        modifiers='outline'\n                        type='text'\n                        name='email'\n                        ref={register({\n                           required: 'You must specify an email',\n                           pattern: {\n                              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                              message: 'Invalid email address'\n                           }\n                        })}\n                     />\n                     <Paragraph>{errors.email && errors.email.message}</Paragraph>\n                  </Form.Group>\n                  <Form.Group direction='row'>\n                     <ImageContainer width={{ desktop: '5rem' }}>\n                        <Image\n                           modifiers='round'\n                           src={`${process.env.REACT_APP_BACKEND_URL}/assets/users/default.jpg`}\n                        />\n                     </ImageContainer>\n                     <Form.Input\n                        type='file'\n                        ref={register}\n                        id='photo'\n                        name='photo'\n                        className='form__file'\n                     />\n                     <Label modifiers='bottomfill' className='form__filelabel' htmlFor='photo'>\n                        Choose New Photo\n                     </Label>\n                     <Button modifiers={['gradient', 'round']} className='form__submitbtn'>\n                        Save Settings\n                     </Button>\n                  </Form.Group>\n               </Form>\n            )}\n         </FormContainer>\n      </Col>\n   );\n};\n\nexport default styled(AccountView)`\n   .form {\n      &__file {\n         display: none;\n      }\n      &__filelabel {\n         align-self: center;\n         margin-left: 2rem;\n         padding: 1rem;\n         margin-right: auto;\n      }\n      &__submitbtn {\n         align-self: center;\n      }\n   }\n`;\n"],"sourceRoot":""}