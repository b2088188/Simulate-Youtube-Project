{"version":3,"sources":["screen/search/SearchItem.js","components/Select.js","screen/search/SearchView.js"],"names":["styled","result","className","isLast","lastSearchElementRef","Item","ref","as","Link","to","videoId","flexWidth","src","images","alt","title","modifiers","views","formatDate","createdAt","flexy","pd","x","y","size","width","height","channel","image","formatShortTitle","description","media","tabport","phone","Select","children","value","setValue","label","NativeSelect","onChange","e","target","name","inputProps","FormHelperText","search","useLocation","searchParams","URLSearchParams","observer","useRef","q","get","useState","sortBy","setSortBy","useVideoSearch","videos","hasNextPage","fetchNextPage","isSuccess","isFetching","isFetchingNextPage","isError","error","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","threshold","observe","length","Message","text","severity","message","flexwidth","desktop","tabland","map","videoGroup","data","i","arr","_id","renderSearchList","setFlex","wrap"],"mappings":"0zBAeA,IA6BeA,eA7BI,SAAC,GAAyD,IAAD,IAAtDC,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,qBAC9C,OACG,cAAC,IAAKC,KAAN,CAAWH,UAAWA,EAAWI,IAAKH,EAASC,EAAuB,KAAtE,SACG,eAAC,IAAD,CAAOG,GAAIC,IAAMC,GAAE,iBAAYR,EAAOS,SAAWR,UAAU,eAA3D,UACG,cAAC,IAAD,CAAgBS,UAAU,KAA1B,SACG,cAAC,IAAD,CAAOC,IAAKX,EAAOY,OAAQC,IAAKb,EAAOc,UAE1C,sBAAKb,UAAU,yBAAf,UACG,cAAC,IAAD,CAAOK,GAAG,KAAV,SAAgBN,EAAOc,QACvB,eAAC,IAAD,CAAWC,UAAU,OAArB,UACIf,EAAOgB,MADX,iBAC2BC,YAAWjB,EAAOkB,cAE7C,eAAC,IAAD,CAAWC,MAAM,SAASC,GAAI,CAAEC,EAAG,IAAKC,EAAG,KAA3C,UACG,cAAC,IAAD,CAAgBC,KAAM,CAAEC,MAAO,OAAQC,OAAQ,QAA/C,SACG,cAAC,IAAD,CAAOd,IAAG,UAAEX,EAAO0B,eAAT,aAAE,EAAgBC,MAAOZ,UAAU,YAEhD,cAAC,IAAD,CAAOT,GAAG,KAAKS,UAAW,CAAC,QAAS,SAApC,UACI,UAAAf,EAAO0B,eAAP,eAAgBZ,QAAS,QAGhC,cAAC,IAAD,CAAWC,UAAU,OAAOd,UAAU,sBAAtC,SACI2B,YAAiB5B,EAAO6B,yBAQ5B9B,CAAf,IAsBW+B,IAAMC,QAAN,mDAMAD,IAAMC,QAAN,iDAGAD,IAAME,MAAN,+C,kCCzELC,EAAS,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC1C,OACG,qCACG,cAACC,EAAA,EAAD,CACGH,MAAOA,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAON,QACnCO,KAAK,WACLC,WAAY,CAAE,aAAc,OAJ/B,SAMIT,IAEJ,cAACU,EAAA,EAAD,UAAiBP,Q,uGCyEXtC,uBA3EI,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,UACX4C,EAAWC,cAAXD,OACFE,EAAe,IAAIC,gBAAgBH,GACnCI,EAAWC,mBACXC,EAAIJ,EAAaK,IAAI,KAJQ,EAKPC,mBAAS,IALF,mBAK5BC,EAL4B,KAKpBC,EALoB,OAe/BC,YAAeL,EAAGG,GARnBG,EAPgC,EAOhCA,OACAC,EARgC,EAQhCA,YACAC,EATgC,EAShCA,cACAC,EAVgC,EAUhCA,UACAC,EAXgC,EAWhCA,WACAC,EAZgC,EAYhCA,mBACAC,EAbgC,EAahCA,QACAC,EAdgC,EAchCA,MAEG7D,EAAuB8D,uBAC1B,SAACC,GACOR,IAAeI,IAChBb,EAASkB,SAASlB,EAASkB,QAAQC,aACvCnB,EAASkB,QAAU,IAAIE,sBACpB,SAACC,GACMA,EAAQ,GAAGC,gBAAkBb,GAC9BC,MAGN,CAAEa,UAAW,KAEZN,GAAMjB,EAASkB,QAAQM,QAAQP,MAEtC,CAACJ,EAAoBJ,EAAaC,IAkBrC,OAAIC,GAAaH,EAAOiB,OAAS,EAE3B,cAAC,IAAD,CAAKlD,MAAM,KAAX,SACG,cAACmD,EAAA,EAAD,CAASC,KAAK,iDAGnBb,GAAWC,EAET,cAAC,IAAD,CAAKxC,MAAM,KAAX,SACG,cAACmD,EAAA,EAAD,CAASE,SAAS,QAAQD,KAAMZ,EAAMc,YAI5C,cAAC,IAAD,CAAKtD,MAAM,KAAKvB,UAAWA,EAA3B,SACG,eAAC,IAAD,CAAY8E,UAAW,CAAEC,QAAS,KAAMC,QAAS,KAAMlD,QAAS,MAAhE,UACG,eAAC,EAAD,CAAQI,MAAOmB,EAAQlB,SAAUmB,EAAWlB,MAAM,UAAlD,UACG,wBAAQF,MAAM,GAAd,uBACA,wBAAQA,MAAM,aAAd,yBACA,wBAAQA,MAAM,SAAd,2BAEH,cAAC,IAAD,UAnCT,SAA0BsB,GACvB,OAAOA,EAAOyB,KAAI,SAACC,GAChB,OAAOA,EAAWC,KAAKF,KAAI,SAAsBlF,EAAQqF,EAAGC,GACzD,OACG,cAAC,EAAD,CAEGtF,OAAQA,EACRG,qBAAsBA,EACtBD,OAAQmF,EAAI,IAAMC,EAAIZ,QAHjB1E,EAAOuF,WA8BXC,CAAiB/B,KACvBI,GAAcC,EAAqB,cAAC,IAAD,IAAkB,YAMnD/D,CAAf,IACK0F,YAAQ,CAAEpE,EAAG,SAAUqE,KAAM","file":"static/js/12.9509dd1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport {\r\n   Link as SLink,\r\n   Paragraph,\r\n   Title,\r\n   List,\r\n   Image,\r\n   ImageContainer,\r\n   ListGroup\r\n} from 'design/components';\r\nimport { media } from 'design/utils';\r\nimport { formatDate, formatShortTitle } from 'utils/format';\r\n\r\nconst SearchItem = ({ result, className, isLast, lastSearchElementRef }) => {\r\n   return (\r\n      <List.Item className={className} ref={isLast ? lastSearchElementRef : null}>\r\n         <SLink as={Link} to={`/watch/${result.videoId}`} className='search__link'>\r\n            <ImageContainer flexWidth='35'>\r\n               <Image src={result.images} alt={result.title} />\r\n            </ImageContainer>\r\n            <div className='search__descriptionbox'>\r\n               <Title as='h2'>{result.title}</Title>\r\n               <Paragraph modifiers='tini'>\r\n                  {result.views} views â€¢ {formatDate(result.createdAt)}\r\n               </Paragraph>\r\n               <ListGroup flexy='center' pd={{ x: '0', y: '0' }}>\r\n                  <ImageContainer size={{ width: '3rem', height: '3rem' }}>\r\n                     <Image src={result.channel?.image} modifiers='round' />\r\n                  </ImageContainer>\r\n                  <Title as='h3' modifiers={['small', 'light']}>\r\n                     {result.channel?.title || ''}\r\n                  </Title>\r\n               </ListGroup>\r\n               <Paragraph modifiers='tini' className='search__description'>\r\n                  {formatShortTitle(result.description)}\r\n               </Paragraph>\r\n            </div>\r\n         </SLink>\r\n      </List.Item>\r\n   );\r\n};\r\n\r\nexport default styled(SearchItem)`\r\n   &:not(:last-child) {\r\n      margin-bottom: 2rem;\r\n   }\r\n   .search {\r\n      &__link {\r\n         text-decoration: none;\r\n         color: var(--color-grey-dark);\r\n         width: 100%;\r\n         height: 100%;\r\n         background-color: #fff;\r\n         box-shadow: var(--shadow-light);\r\n         display: flex;\r\n\r\n         &:hover {\r\n            color: currentColor;\r\n         }\r\n      }\r\n\r\n      &__descriptionbox {\r\n         flex: 1;\r\n         padding: 2rem 2rem;\r\n         ${media.tabport(`\r\n            padding: 1rem 1rem;\r\n            `)}\r\n      }\r\n\r\n      &__description {\r\n         ${media.tabport(`\r\n            line-height: 1.5;\r\n            `)}\r\n         ${media.phone(`\r\n            display: none;\r\n            `)}\r\n      }\r\n   }\r\n`;\r\n","import { NativeSelect, FormHelperText } from '@material-ui/core';\r\n\r\nconst Select = ({ children, value, setValue, label }) => {\r\n   return (\r\n      <>\r\n         <NativeSelect\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            name='category'\r\n            inputProps={{ 'aria-label': 'age' }}\r\n         >\r\n            {children}\r\n         </NativeSelect>\r\n         <FormHelperText>{label}</FormHelperText>\r\n      </>\r\n   );\r\n};\r\n\r\nexport { Select };\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useVideoSearch } from 'utils/video';\r\nimport styled from 'styled-components';\r\nimport { Col, List, Navigation } from 'design/components';\r\nimport { setFlex } from 'design/utils';\r\nimport SearchItem from './SearchItem';\r\nimport { Message } from 'components/Message';\r\nimport { AreaSpinner } from 'components/Spinner';\r\nimport { Select } from 'components/Select';\r\n\r\nconst SearchView = ({ className }) => {\r\n   const { search } = useLocation();\r\n   const searchParams = new URLSearchParams(search);\r\n   const observer = useRef();\r\n   const q = searchParams.get('q');\r\n   const [sortBy, setSortBy] = useState('');\r\n   const {\r\n      videos,\r\n      hasNextPage,\r\n      fetchNextPage,\r\n      isSuccess,\r\n      isFetching,\r\n      isFetchingNextPage,\r\n      isError,\r\n      error\r\n   } = useVideoSearch(q, sortBy);\r\n   const lastSearchElementRef = useCallback(\r\n      (node) => {\r\n         if (!hasNextPage || isFetchingNextPage) return;\r\n         if (observer.current) observer.current.disconnect();\r\n         observer.current = new IntersectionObserver(\r\n            (entries) => {\r\n               if (entries[0].isIntersecting && hasNextPage) {\r\n                  fetchNextPage();\r\n               }\r\n            },\r\n            { threshold: 0.5 }\r\n         );\r\n         if (node) observer.current.observe(node);\r\n      },\r\n      [isFetchingNextPage, hasNextPage, fetchNextPage]\r\n   );\r\n\r\n   function renderSearchList(videos) {\r\n      return videos.map((videoGroup) => {\r\n         return videoGroup.data.map(function generateItem(result, i, arr) {\r\n            return (\r\n               <SearchItem\r\n                  key={result._id}\r\n                  result={result}\r\n                  lastSearchElementRef={lastSearchElementRef}\r\n                  isLast={i + 1 === arr.length}\r\n               />\r\n            );\r\n         });\r\n      });\r\n   }\r\n\r\n   if (isSuccess && videos.length < 1)\r\n      return (\r\n         <Col width='10'>\r\n            <Message text='No video found, please try another search.' />\r\n         </Col>\r\n      );\r\n   if (isError && error)\r\n      return (\r\n         <Col width='10'>\r\n            <Message severity='error' text={error.message} />\r\n         </Col>\r\n      );\r\n   return (\r\n      <Col width='10' className={className}>\r\n         <Navigation flexwidth={{ desktop: '60', tabland: '70', tabport: '90' }}>\r\n            <Select value={sortBy} setValue={setSortBy} label='Sort By'>\r\n               <option value=''>Relevance</option>\r\n               <option value='-createdAt'>Upload Date</option>\r\n               <option value='-views'>View Count</option>\r\n            </Select>\r\n            <List>{renderSearchList(videos)}</List>\r\n            {isFetching || isFetchingNextPage ? <AreaSpinner /> : null}\r\n         </Navigation>\r\n      </Col>\r\n   );\r\n};\r\n\r\nexport default styled(SearchView)`\r\n   ${setFlex({ x: 'center', wrap: 'wrap' })}\r\n   padding: 5rem 0rem;\r\n`;\r\n"],"sourceRoot":""}