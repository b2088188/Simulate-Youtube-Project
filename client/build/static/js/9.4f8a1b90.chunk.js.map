{"version":3,"sources":["components/searchView/SearchItem.js","components/searchView/SearchView.js"],"names":["styled","result","className","isLast","lastSearchElementRef","Item","ref","as","Link","to","videoId","flexWidth","src","images","alt","title","modifiers","views","formatDate","createdAt","flexy","pd","x","y","size","width","height","channel","image","formatShortTitle","description","media","tabport","phone","list","useSearchState","videos","hasMore","statusVideos","errorVideos","useSearchActions","getSearchVideos","searchReset","search","useLocation","observer","useRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","setPage","prev","threshold","observe","q","URLSearchParams","get","useState","sortBy","setSortBy","page","useEffect","length","text","severity","flexwidth","desktop","tabland","NativeSelect","value","onChange","e","target","name","inputProps","FormHelperText","map","i","arr","_id","setFlex","wrap"],"mappings":"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","file":"static/js/9.4f8a1b90.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n   Link as SLink,\n   Paragraph,\n   Title,\n   List,\n   Image,\n   ImageContainer,\n   ListGroup\n} from '../../design/components';\nimport { media } from '../../design/utils';\nimport { formatDate, formatShortTitle } from '../../utils/Format';\n\nconst SearchItem = ({ result, className, isLast, lastSearchElementRef }) => {\n   return (\n      <List.Item className={className} ref={isLast ? lastSearchElementRef : null}>\n         <SLink as={Link} to={`/watch/${result.videoId}`} className='search__link'>\n            <ImageContainer flexWidth='35'>\n               <Image src={result.images} alt={result.title} />\n            </ImageContainer>\n            <div className='search__descriptionbox'>\n               <Title as='h2'>{result.title}</Title>\n               <Paragraph modifiers='tini'>\n                  {result.views} views â€¢ {formatDate(result.createdAt)}\n               </Paragraph>\n               <ListGroup flexy='center' pd={{ x: '0', y: '0' }}>\n                  <ImageContainer size={{ width: '3rem', height: '3rem' }}>\n                     <Image src={result.channel?.image} modifiers='round' />\n                  </ImageContainer>\n                  <Title as='h3' modifiers={['small', 'light']}>\n                     {result.channel?.title || ''}\n                  </Title>\n               </ListGroup>\n               <Paragraph modifiers='tini' className='search__description'>\n                  {formatShortTitle(result.description)}\n               </Paragraph>\n            </div>\n         </SLink>\n      </List.Item>\n   );\n};\n\nexport default styled(SearchItem)`\n   &:not(:last-child) {\n      margin-bottom: 2rem;\n   }\n   .search {\n      &__link {\n         text-decoration: none;\n         color: var(--color-grey-dark);\n         width: 100%;\n         height: 100%;\n         background-color: #fff;\n         box-shadow: var(--shadow-light);\n         display: flex;\n\n         &:hover {\n            color: currentColor;\n         }\n      }\n\n      &__descriptionbox {\n         flex: 1;\n         padding: 2rem 2rem;\n         ${media.tabport(`\n            padding: 1rem 1rem;\n            `)}\n      }\n\n      &__description {\n         ${media.tabport(`\n            line-height: 1.5;\n            `)}\n         ${media.phone(`\n            display: none;\n            `)}\n      }\n   }\n`;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Col, List, Navigation, FlexWrapper } from '../../design/components';\nimport { setFlex } from '../../design/utils';\nimport { useSearchState } from '../../stores/search/searchStateContext';\nimport { useSearchActions } from '../../stores/search/searchActionContext';\nimport SearchItem from './SearchItem';\nimport { Spinner, Message } from '../../design/elements';\nimport { NativeSelect, FormHelperText } from '@material-ui/core';\n\nconst SearchView = ({ className }) => {\n   const { videos, hasMore, statusVideos, errorVideos } = useSearchState();\n   const { getSearchVideos, searchReset } = useSearchActions();\n   const { search } = useLocation();\n   const observer = useRef();\n   const lastSearchElementRef = useCallback(\n      (node) => {\n         if (statusVideos === 'pending') return;\n         if (observer.current) observer.current.disconnect();\n         observer.current = new IntersectionObserver(\n            (entries) => {\n               if (entries[0].isIntersecting && hasMore) {\n                  setPage((prev) => prev + 1);\n               }\n            },\n            { threshold: 0.5 }\n         );\n         if (node) observer.current.observe(node);\n      },\n      [statusVideos, hasMore]\n   );\n   const searchParams = new URLSearchParams(search);\n   const q = searchParams.get('q');\n   const [sortBy, setSortBy] = useState('');\n   const [page, setPage] = useState(1);\n\n   useEffect(() => {\n      setPage(1);\n      searchReset();\n   }, [q, searchReset]);\n\n   useEffect(() => {\n      getSearchVideos(q, page, sortBy);\n   }, [q, page, sortBy, getSearchVideos]);\n\n   function onSortClick(e) {\n      setPage(1);\n      searchReset();\n      setSortBy(e.target.value);\n   }\n\n   function renderSearchList(list) {\n      return list?.map(function generateItem(result, i, arr) {\n         return (\n            <SearchItem\n               key={result._id}\n               result={result}\n               lastSearchElementRef={lastSearchElementRef}\n               isLast={i + 1 === arr.length}\n            />\n         );\n      });\n   }\n\n   if (statusVideos === 'resolved' && videos.length < 1)\n      return (\n         <Col width='10'>\n            <Message text='No video found, please try another search.' />\n         </Col>\n      );\n   if (statusVideos === 'rejected' && errorVideos)\n      return (\n         <Col width='10'>\n            <Message severity='error' text={errorVideos} />\n         </Col>\n      );\n   return (\n      <Col width='10' className={className}>\n         <Navigation flexwidth={{ desktop: '60', tabland: '70', tabport: '90' }}>\n            <NativeSelect\n               value={sortBy}\n               onChange={onSortClick}\n               name='category'\n               inputProps={{ 'aria-label': 'age' }}\n            >\n               <option value=''>Relevance</option>\n               <option value='-createdAt'>Upload Date</option>\n               <option value='-views'>View Count</option>\n            </NativeSelect>\n            <FormHelperText>Sort By</FormHelperText>\n\n            <List>{renderSearchList(videos)}</List>\n            <FlexWrapper>\n               {statusVideos === 'idle' || statusVideos === 'pending' ? (\n                  <Spinner modifiers='dark' />\n               ) : null}\n            </FlexWrapper>\n         </Navigation>\n      </Col>\n   );\n};\n\nexport default styled(SearchView)`\n   ${setFlex({ x: 'center', wrap: 'wrap' })}\n   padding: 5rem 0rem;\n`;\n"],"sourceRoot":""}